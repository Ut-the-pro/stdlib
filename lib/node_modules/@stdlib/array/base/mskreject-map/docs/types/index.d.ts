/*
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

// TypeScript Version: 4.1

/// <reference types="@stdlib/types"/>

import { Collection, AccessorArrayLike } from '@stdlib/types/array';

/**
* Returns a transformed element of input array.
*
* @param value - current array element
* @param index - current array element index
* @param arr - input array
* @returns The transformed array element
*/
type ClbkType<T, U> = ( this: U, value: T, index: number, arr: Collection<T> | AccessorArrayLike<T> ) => any;

/**
* Returns a new array by applying a mask and mapping the unmasked values according to a callback function.
*
* @param x - input array
* @param mask - mask array
* @param clbk - mapping function
* @param thisArg - function context
* @returns output array
*
* @example
* var x = [ 1, 2, 3, 4 ];
*
* var y = mskrejectMap( x, [ 0, 1, 0, 1 ], function( val ) {
*     return val * 2;
* } );
* // returns [ 2, 6 ]
*/
declare function mskrejectMap<T = unknown, U = unknown>( x: Collection<T> | AccessorArrayLike<T>, mask: Collection, clbk: ClbkType<T, U>, thisArg?: U ): Array<T>;


// EXPORTS //

export = mskrejectMap;
